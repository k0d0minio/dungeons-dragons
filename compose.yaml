# Common configuration templates using YAML anchors

# Base service configuration
x-service-base: &service-base
  restart: unless-stopped
  deploy:
    resources:
      limits:
        memory: 2G
        cpus: "2.0"
      reservations:
        memory: 1G
        cpus: "1.0"
  networks:
    - config

# Health check configurations (test parameter set per service)
x-healthcheck: &healthcheck
  interval: 30s
  timeout: 10s
  retries: 5
  start_period: 60s

# Traefik labels - web specific
x-traefik-web: &traefik-web
  - "traefik.enable=true"
  - "traefik.http.routers.dungeons-dragons.rule=Host(`dnd.localtest.me`)"
  - "traefik.http.routers.dungeons-dragons.entrypoints=websecure"
  - "traefik.http.routers.dungeons-dragons.tls=true"
  - "traefik.http.services.dungeons-dragons.loadbalancer.server.port=3000"


x-volume-node-modules: &volume-node-modules
  type: volume
  target: /app/node_modules

services:
  dungeons-dragons:
    container_name: dungeons-dragons
    <<: *service-base
    labels: *traefik-web
    build:
      context: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/dnd_toolbox?schema=public
    volumes:
      - <<: *volume-node-modules
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      <<: *healthcheck

  postgres:
    container_name: dnd_toolbox_db
    image: postgres:15
    environment:
      - POSTGRES_DB=dnd_toolbox
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - config

volumes:
  postgres_data:

networks:
  config:
    external: true

